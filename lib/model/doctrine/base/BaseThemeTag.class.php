<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ThemeTag', 'doctrine');

/**
 * BaseThemeTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $theme_id
 * @property integer $tag_id
 * @property Theme $Theme
 * @property Tag $Tag
 * 
 * @method integer  getId()       Returns the current record's "id" value
 * @method integer  getThemeId()  Returns the current record's "theme_id" value
 * @method integer  getTagId()    Returns the current record's "tag_id" value
 * @method Theme    getTheme()    Returns the current record's "Theme" value
 * @method Tag      getTag()      Returns the current record's "Tag" value
 * @method ThemeTag setId()       Sets the current record's "id" value
 * @method ThemeTag setThemeId()  Sets the current record's "theme_id" value
 * @method ThemeTag setTagId()    Sets the current record's "tag_id" value
 * @method ThemeTag setTheme()    Sets the current record's "Theme" value
 * @method ThemeTag setTag()      Sets the current record's "Tag" value
 * 
 * @package    aeurus
 * @subpackage model
 * @author     Rodrigo Campos H. rodrigo <at> webdevel <dot> cl
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseThemeTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('theme_tag');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('theme_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tag_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Theme', array(
             'local' => 'theme_id',
             'foreign' => 'id'));

        $this->hasOne('Tag', array(
             'local' => 'tag_id',
             'foreign' => 'id'));
    }
}